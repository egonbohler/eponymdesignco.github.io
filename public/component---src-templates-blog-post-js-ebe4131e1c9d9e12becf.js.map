{"version":3,"sources":["webpack:///./src/components/NextProject.js","webpack:///./src/templates/blog-post.js"],"names":["NextProject","props","prev","react_default","a","createElement","className","style","height","width","maxWidth","backgroundColor","borderRadius","frontmatter","title","gatsby_browser_entry","to","path","__webpack_require__","d","__webpack_exports__","query","_ref","data","pageContext","location","post","markdownRemark","imageOne","imageTwo","imageThree","tags","next","layout","map","tag","dangerouslySetInnerHTML","__html","html","gatsby_image_default","fluid","childImageSharp","alt","components_NextProject"],"mappings":"0JA0BeA,EAvBK,SAAAC,GAAS,IACnBC,EAASD,EAATC,KACN,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEC,OAAQ,SAAUC,MAAO,OAAQC,SAAU,QAASC,gBAAiB,QAASC,aAAc,SACzGT,EAAAC,EAAAC,cAAA,WAE+B,eAA3BH,EAAKW,YAAYC,MAEfX,EAAAC,EAAAC,cAAA,oCAGAF,EAAAC,EAAAC,cAAA,yBAIJF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,gBAAgBU,GAAId,EAAKW,YAAYI,MAAMd,EAAAC,EAAAC,cAAA,UAAKH,EAAKW,YAAYC,WCnB3FI,EAAAC,EAAAC,EAAA,0BAAAC,IAMeD,EAAA,iBAAAE,GAAoC,IAAjCC,EAAiCD,EAAjCC,KAAgBC,GAAiBF,EAA3BG,SAA2BH,EAAjBE,aAC1BE,EAAOH,EAAKI,eACVd,EAAea,EAAfb,YACAC,EAAgDD,EAAhDC,MAAOc,EAAyCf,EAAzCe,SAAUC,EAA+BhB,EAA/BgB,SAAUC,EAAqBjB,EAArBiB,WAAYC,EAASlB,EAATkB,KACvCC,EAAeR,EAAfQ,KAAM9B,EAASsB,EAATtB,KACd,OACEC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBQ,GAC/BX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAb,SAEEyB,EAAKG,IAAI,SAAAC,GACP,OAAOhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAO6B,MAIjChC,EAAAC,EAAAC,cAAA,OAAK+B,wBAAyB,CAAEC,OAAQX,EAAKY,QAC7CnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACEoC,MAAOZ,EAASa,gBAAgBD,MAChCE,IAAK5B,EACLR,UAAU,uBAEZH,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACEoC,MAAOX,EAASY,gBAAgBD,MAChCE,IAAK5B,EACLR,UAAU,4BAEZH,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACEoC,MAAOV,EAAWW,gBAAgBD,MAClCE,IAAK5B,EACLR,UAAU,4BAGZH,EAAAC,EAAAC,cAACsC,EAAD,CAAazC,KAAMA,EAAM8B,KAAMA,OAnCxB,IA8CFX,EAAK","file":"component---src-templates-blog-post-js-ebe4131e1c9d9e12becf.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst NextProject = props => {\n  const { prev } = props;\n    return (\n      <div className=\"next-project\">\n        <hr style={{ height: '0.15em', width: '20vw', maxWidth: '100px', backgroundColor: 'black', borderRadius: '1px'}}/>\n        <div>\n          {\n            prev.frontmatter.title === \"Contact Us\" ?\n            (\n              <p>Ready to work together?</p>\n            ) :\n            (\n              <p>Next Project</p>\n            )\n          }\n\n          <Link className=\"project-title\" to={prev.frontmatter.path}><h1>{prev.frontmatter.title}</h1></Link>\n        </div>\n      </div>\n    )\n}\n\n\nexport default NextProject;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from 'gatsby-image'\nimport Layout from \"../components/layout\"\nimport NextProject from \"../components/NextProject\"\n\nexport default ({ data, location, pageContext}) => {\n  const post = data.markdownRemark;\n  const { frontmatter} = post;\n  const { title, imageOne, imageTwo, imageThree, tags } = frontmatter;\n  const { next, prev } = pageContext;\n  return (\n    <Layout>\n      <div className=\"project-body\">\n        <h1 className=\"project-title\">{title}</h1>\n        <div className=\"tags-line\">\n          <p className=\"tag\">Tags:</p>\n          {\n            tags.map(tag =>{\n              return(<p className=\"tag\">{tag}</p>)\n            })\n          }\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <div className=\"project-image-group\">\n        <Img\n          fluid={imageOne.childImageSharp.fluid}\n          alt={title}\n          className=\"project-image-main\"\n        />\n        <Img\n          fluid={imageTwo.childImageSharp.fluid}\n          alt={title}\n          className=\"project-image-secondary\"\n        />\n        <Img\n          fluid={imageThree.childImageSharp.fluid}\n          alt={title}\n          className=\"project-image-tertiary\"\n        />\n        </div>\n        <NextProject prev={prev} next={next}/>\n      </div>\n\n    </Layout>\n  )\n}\n\n{/* May be able to reference the gatsby docs on blog posts\n    with tags to implement an image count-agnostic query/component\n    see here: https://www.gatsbyjs.org/docs/adding-tags-and-categories-to-blog-posts/\n  */}\nexport const query = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date\n        tags\n        imageOne {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        imageTwo {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        imageThree {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n\n      }\n    }\n  }\n`\n"],"sourceRoot":""}